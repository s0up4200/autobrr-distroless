name: Check for new versions

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

permissions:
  contents: write
  actions: write

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version from autobrr
        id: autobrr
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/autobrr/autobrr/releases/latest | jq -r .tag_name)
          echo "Latest autobrr version: ${LATEST_VERSION}"
          LATEST_SEMVER=${LATEST_VERSION#v}
          echo "latest_version=${LATEST_VERSION}" >> $GITHUB_OUTPUT
          echo "latest_semver=${LATEST_SEMVER}" >> $GITHUB_OUTPUT

      - name: Get current version
        id: current
        run: |
          CURRENT_VERSION=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Current version: ${CURRENT_VERSION}"
          CURRENT_SEMVER=${CURRENT_VERSION#v}
          echo "current_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          echo "current_semver=${CURRENT_SEMVER}" >> $GITHUB_OUTPUT

      - name: Install semver
        run: |
          curl -O https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x semver

      - name: Compare versions
        id: compare
        run: |
          echo "Comparing versions:"
          echo "Latest: ${{ steps.autobrr.outputs.latest_semver }}"
          echo "Current: ${{ steps.current.outputs.current_semver }}"
          RESULT=$(./semver compare ${{ steps.autobrr.outputs.latest_semver }} ${{ steps.current.outputs.current_semver }})
          echo "Raw comparison result: ${RESULT}"
          if [ "${RESULT}" = "1" ]; then
            echo "New version available!"
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "No update needed"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Debug tag creation
        if: steps.compare.outputs.needs_update == 'true'
        run: |
          echo "Would create tag: ${{ steps.autobrr.outputs.latest_version }}"
          echo "Current tags:"
          git tag -l
          echo "needs_update value: ${{ steps.compare.outputs.needs_update }}"

      - name: Create new tag if needed
        if: steps.compare.outputs.needs_update == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'

          TAG_NAME="${{ steps.autobrr.outputs.latest_version }}"
          echo "Creating tag ${TAG_NAME}"

          # Create and push tag
          git tag -a ${TAG_NAME} -m "Release ${TAG_NAME}"
          git push --follow-tags origin ${TAG_NAME}

          echo "Tag pushed, waiting for build workflow..."
          sleep 15

          # Check if build workflow started
          if gh run list --workflow=build.yaml --json status,headBranch | jq -e '.[] | select(.headBranch=="'${TAG_NAME}'")' > /dev/null; then
            echo "Build workflow started for tag ${TAG_NAME}"
          else
            echo "Build workflow did not start automatically for tag ${TAG_NAME}"
            echo "Attempting manual trigger..."
            gh workflow run build.yaml --ref ${TAG_NAME}
          fi
